---
const staticProjects = [
    { 
        title: "Yumly", 
        tag: "Design",
        year: "2024-2025",
        img: "/imgs/ville.jpg",
        slug: "/projets/yumly"
    }, 
    { 
        title: "Posters", 
        tag: "Graphisme",
        year: "2024-2025",
        img: "/imgs/ville.jpg", 
        slug: "/projets/posters" 
    }, 
    { 
        title: "Site web de l'APG", 
        tag: "Développement",
        year: "2025",
        img: "/imgs/ville.jpg", 
        slug: "/projets/apg" 
    }, 
    { 
        title: "Projets 3D", 
        tag: "3D",
        year: "2023-2025",
        img: "/imgs/ville.jpg", 
        slug: "/projets/3d" 
    }
];
---

<h2 class="text-4xl sm:text-5xl lg:text-6xl font-semibold text-left pt-24 pb-12 lg:pb-16 px-6 lg:px-24">Mes projets</h2>

<section class="projects-fullscreen-section relative" aria-label="Galerie des projets">
    <div class="sr-only" role="status" aria-live="polite" id="project-status">
        Projet actif: {staticProjects[0].title}
    </div>
    
    <div class="projects-container relative h-screen w-full">
        {staticProjects.map((project, index) => (
            <div 
                class="project-slide absolute top-0 left-0 w-full h-screen opacity-0 pointer-events-none z-10" 
                data-project-index={index}
            >
                <a 
                    href={project.slug} 
                    class="project-link block w-full h-full relative cursor-pointer focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-[#FF7957]" 
                    aria-label={`Voir le projet ${project.title} (${project.tag})`}
                >
                    <div class="project-image-container absolute inset-0 z-10">
                        <img 
                            src={project.img} 
                            alt="" class="w-full h-full object-cover"
                        />
                    </div>
                    
                    <div class="absolute inset-0 z-20 pointer-events-none grid grid-cols-3 md:grid-cols-4" aria-hidden="true">
                        <div class="transition-rect bg-[#1a1a1a] scale-x-0 origin-right"></div>
                        <div class="transition-rect bg-[#1a1a1a] scale-x-0 origin-right"></div>
                        <div class="transition-rect bg-[#1a1a1a] scale-x-0 origin-right hidden md:block"></div>
                        <div class="transition-rect bg-[#1a1a1a] scale-x-0 origin-right"></div>
                    </div>
                    
                    <div class="absolute inset-0 z-30 pointer-events-none" aria-hidden="true">
                        <div class="absolute top-0 h-full w-[2px] bg-white/30 left-1/3 md:left-1/4"></div>
                        <div class="absolute top-0 h-full w-[2px] bg-white/30 hidden md:block md:left-1/2"></div>
                        <div class="absolute top-0 h-full w-[2px] bg-white/30 left-2/3 md:left-3/4"></div>
                    </div>
                    
                    <div class="absolute inset-0 z-40 pointer-events-none" aria-hidden="true">
                        <div class="absolute top-0 h-full flex items-center pl-4 md:pl-8 left-0 w-1/3 md:w-1/4">
                            <span class="text-white font-medium uppercase tracking-wider text-xs md:text-base">{project.title}</span>
                        </div>
                        <div class="absolute top-0 h-full flex items-center pl-4 md:pl-8 left-1/3 w-1/3 md:left-1/4 md:w-1/4">
                            <span class="text-white font-medium uppercase tracking-wider text-xs md:text-base">{project.tag}</span>
                        </div>
                        <div class="absolute top-0 h-full items-center pl-4 md:pl-8 hidden md:flex md:left-1/2 md:w-1/4">
                            <span class="text-white font-medium uppercase tracking-wider text-xs md:text-base">{project.year}</span>
                        </div>
                        <div class="absolute top-0 h-full flex items-center pl-4 md:pl-8 left-2/3 w-1/3 md:left-3/4 md:w-1/4">
                            <span class="text-white font-medium uppercase tracking-wider text-xs md:text-base">{index + 1}/{staticProjects.length}</span>
                        </div>
                    </div>
                </a>
            </div>
        ))}
    </div>
</section>

<style>
    .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border-width: 0;
    }

    .project-slide.is-visible {
        opacity: 1;
        pointer-events: auto;
        z-index: 20;
    }

    .project-image-container::after {
        content: '';
        position: absolute;
        inset: 0;
        z-index: 2; 
    }
</style>

<script>
    import { gsap } from 'gsap';
    import { ScrollTrigger } from 'gsap/ScrollTrigger';
    import { ScrollToPlugin } from 'gsap/ScrollToPlugin';

    gsap.registerPlugin(ScrollTrigger, ScrollToPlugin);

    document.addEventListener('astro:page-load', () => {
        ScrollTrigger.getAll().forEach(st => st.kill());
        
        const section = document.querySelector('.projects-fullscreen-section');
        const slides = document.querySelectorAll('.project-slide');
        const statusEl = document.getElementById('project-status');
        // Récupérer les titres depuis les slides existants
        const staticProjectsData = Array.from(slides).map((slide) => {
            const titleEl = slide.querySelector('.info-col-title .info-text');
            return { title: titleEl ? titleEl.textContent.trim() : '' };
        });
        
        if (!section || slides.length === 0) return;

        const DELAY_PER_PROJECT = 800;

        slides.forEach((slide, idx) => {
            slide.classList.remove('is-visible');
            const rects = slide.querySelectorAll('.transition-rect');
            gsap.set(rects, { scaleX: 0, transformOrigin: 'right center' });

            const link = slide.querySelector('a.project-link');
            if (link) link.setAttribute('tabindex', '0');
        });

        slides[0].classList.add('is-visible');

        const pinTrigger = ScrollTrigger.create({
            trigger: section,
            start: 'top top',
            end: () => `+=${slides.length * DELAY_PER_PROJECT}`,
            pin: '.projects-container',
        });

        slides.forEach((slide, i) => {
            const link = slide.querySelector('a.project-link');
            if (!link) return;

            link.addEventListener('focus', (e) => {
                if (slide.classList.contains('is-visible')) return;
                
                const targetScroll = pinTrigger.start + (i * DELAY_PER_PROJECT) + 5;

                gsap.to(window, {
                    scrollTo: targetScroll,
                    duration: 0.4,
                    ease: 'power2.inOut'
                });
            });
        });

        slides.forEach((slide, i) => {
            if (i < slides.length - 1) {
                const currentRects = slide.querySelectorAll('.transition-rect');
                const nextSlide = slides[i + 1];
                const nextRects = nextSlide.querySelectorAll('.transition-rect');
                
                ScrollTrigger.create({
                    trigger: section,
                    start: () => `top+=${(i + 1) * DELAY_PER_PROJECT} top`,
                    end: () => `top+=${(i + 2) * DELAY_PER_PROJECT} top`,
                    onEnter: () => {
                        if (statusEl && staticProjectsData[i + 1]) {
                            statusEl.textContent = `Projet actif: ${staticProjectsData[i + 1].title}`;
                        }

                        const tl = gsap.timeline();
                        
                        tl.to(currentRects, {
                            scaleX: 1,
                            transformOrigin: 'right center',
                            stagger: 0.08,
                            duration: 0.4,
                            ease: 'power2.inOut'
                        })
                        .add(() => {
                            slide.classList.remove('is-visible');
                            nextSlide.classList.add('is-visible');
                        })
                        .set(nextRects, { scaleX: 1, transformOrigin: 'left center' })
                        .to(nextRects, {
                            scaleX: 0,
                            stagger: 0.08,
                            duration: 0.4,
                            ease: 'power2.inOut'
                        })
                        .set(currentRects, { scaleX: 0 });
                    },
                    onLeaveBack: () => {
                        if (statusEl && staticProjectsData[i]) {
                            statusEl.textContent = `Projet actif: ${staticProjectsData[i].title}`;
                        }

                        const tl = gsap.timeline();
                        
                        tl.to(nextRects, {
                            scaleX: 1,
                            transformOrigin: 'right center',
                            stagger: 0.08,
                            duration: 0.4,
                            ease: 'power2.inOut'
                        })
                        .add(() => {
                            nextSlide.classList.remove('is-visible');
                            slide.classList.add('is-visible');
                        })
                        .set(currentRects, { scaleX: 1, transformOrigin: 'left center' })
                        .to(currentRects, {
                            scaleX: 0,
                            stagger: 0.08,
                            duration: 0.4,
                            ease: 'power2.inOut'
                        })
                        .set(nextRects, { scaleX: 0 });
                    }
                });
            }
        });
    });
</script>